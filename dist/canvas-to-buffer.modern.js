import t from"typedarray-to-buffer";import e from"atob";const n="undefined"!=typeof document&&"function"==typeof document.createElement;let o;const i=function(i,a={}){const u=this;if(a.image=a.image?a.image:{},a.image.types=a.image.types?a.image.types:[],a.image.types.length>2)throw new Error("Too many image types are specified!");a.image.types.length<1&&(a.image.types=n?["webp","jpeg"]:["png"]),a.image.quality||(a.image.quality=.5);const r=parseFloat(a.image.quality);function c(t){let e;return a.image.types[t]&&(e="image/"+a.image.types[t]),e}function f(t,e){const n=t&&t.match(e);return n&&a.debug&&a.debug("Image type %s verified",e),n}function g(){let t;return n?(t=document.createElement("canvas"),t.width=t.height=1):t=i,t}function l(t,e){try{g().toDataURL(t,function(n,o){n?e(n):e(null,f(o,t))})}catch(t){e(null,!1)}}function s(t){let e;try{const n=g();e=f(n.toDataURL&&n.toDataURL(t),t)}catch(e){a.debug&&a.logger.debug("Failed to call toDataURL() on canvas for image type %s",t)}return e}function m(t){const e=c(0);if(!t)return function(t){return s(t)||a.image.types[1]&&s(t=c(1))||(t=null),!t&&a.debug&&a.logger.debug("Unable to verify image type"),t}(e);!function(t,e){l(t,function(n,o){n?e(n):o?e(null,t):l(t=c(1),function(n,o){n?e(n):e(null,o?t:null)})})}(e,t)}function p(n){const o=n.split(",")[1];let i;if("function"==typeof e)i=e(o);else{if("function"!=typeof u.constructor.atob)throw new Error("atob function is missing");i=u.constructor.atob(o)}const a=new Uint8Array(i.length);for(let t=0,e=i.length;t<e;t++)a[t]=i.charCodeAt(t);return t(a)}this.toBuffer=function(t){if(!t)return function(){const t=u.getImageType();let e;return t&&(e=p(i.toDataURL(t,r))),e}();!function(t){u.getImageType(function(e,n){e?t(e):n?i.toDataURL(n,function(e,n){e?t(e):t(null,p(n))}):t()})}(t)},this.getImageType=function(t){if(!t)return o&&n||(o=m()),o;o&&n?t(null,o):m(function(e,n){e?t(e):(o=n,t(null,o))})}};export{i as default};
//# sourceMappingURL=canvas-to-buffer.modern.js.map
