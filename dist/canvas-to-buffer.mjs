import t from"typedarray-to-buffer";import e from"atob";var n,a="undefined"!=typeof document&&"function"==typeof document.createElement,i=function(i,o){void 0===o&&(o={});var r=this;if(o.image=o.image?o.image:{},o.image.types=o.image.types?o.image.types:[],o.image.types.length>2)throw new Error("Too many image types are specified!");o.image.types.length<1&&(o.image.types=a?["webp","jpeg"]:["png"]),o.image.quality||(o.image.quality=.5);var u=parseFloat(o.image.quality);function f(t){var e;return o.image.types[t]&&(e="image/"+o.image.types[t]),e}function g(t,e){var n=t&&t.match(e);return n&&o.debug&&o.debug("Image type %s verified",e),n}function c(){var t;return a?(t=document.createElement("canvas")).width=t.height=1:t=i,t}function l(t,e){try{c().toDataURL(t,function(n,a){n?e(n):e(null,g(a,t))})}catch(t){e(null,!1)}}function m(t){var e;try{var n=c();e=g(n.toDataURL&&n.toDataURL(t),t)}catch(e){o.debug&&o.logger.debug("Failed to call toDataURL() on canvas for image type %s",t)}return e}function p(t){var e=f(0);if(!t)return function(t){return m(t)||o.image.types[1]&&m(t=f(1))||(t=null),!t&&o.debug&&o.logger.debug("Unable to verify image type"),t}(e);!function(t,e){l(t,function(n,a){n?e(n):a?e(null,t):l(t=f(1),function(n,a){n?e(n):e(null,a?t:null)})})}(e,t)}function y(n){var a,i=n.split(",")[1];if("function"==typeof e)a=e(i);else{if("function"!=typeof r.constructor.atob)throw new Error("atob function is missing");a=r.constructor.atob(i)}for(var o=new Uint8Array(a.length),u=0,f=a.length;u<f;u++)o[u]=a.charCodeAt(u);return t(o)}this.toBuffer=function(t){if(!t)return(n=r.getImageType())&&(e=y(i.toDataURL(n,u))),e;var e,n;!function(t){r.getImageType(function(e,n){e?t(e):n?i.toDataURL(n,function(e,n){e?t(e):t(null,y(n))}):t()})}(t)},this.getImageType=function(t){if(!t)return n&&a||(n=p()),n;n&&a?t(null,n):p(function(e,a){e?t(e):t(null,n=a)})}};export{i as default};
//# sourceMappingURL=canvas-to-buffer.mjs.map
