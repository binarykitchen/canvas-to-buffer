const t=require("typedarray-to-buffer"),e=require("atob"),n="undefined"!=typeof document&&"function"==typeof document.createElement;let o;module.exports=function(i,u={}){const a=this;if(u.image=u.image?u.image:{},u.image.types=u.image.types?u.image.types:[],u.image.types.length>2)throw new Error("Too many image types are specified!");u.image.types.length<1&&(u.image.types=n?["webp","jpeg"]:["png"]),u.image.quality||(u.image.quality=.5);const r=parseFloat(u.image.quality);function c(t){let e;return u.image.types[t]&&(e="image/"+u.image.types[t]),e}function f(t,e){const n=t&&t.match(e);return n&&u.debug&&u.debug("Image type %s verified",e),n}function g(){let t;return n?(t=document.createElement("canvas"),t.width=t.height=1):t=i,t}function l(t,e){try{g().toDataURL(t,function(n,o){n?e(n):e(null,f(o,t))})}catch(t){e(null,!1)}}function s(t){let e;try{const n=g();e=f(n.toDataURL&&n.toDataURL(t),t)}catch(e){u.debug&&u.logger.debug("Failed to call toDataURL() on canvas for image type %s",t)}return e}function m(t){const e=c(0);if(!t)return function(t){return s(t)||u.image.types[1]&&s(t=c(1))||(t=null),!t&&u.debug&&u.logger.debug("Unable to verify image type"),t}(e);!function(t,e){l(t,function(n,o){n?e(n):o?e(null,t):l(t=c(1),function(n,o){n?e(n):e(null,o?t:null)})})}(e,t)}function y(n){const o=n.split(",")[1];let i;if("function"==typeof e)i=e(o);else{if("function"!=typeof a.constructor.atob)throw new Error("atob function is missing");i=a.constructor.atob(o)}const u=new Uint8Array(i.length);for(let t=0,e=i.length;t<e;t++)u[t]=i.charCodeAt(t);return t(u)}this.toBuffer=function(t){if(!t)return function(){const t=a.getImageType();let e;return t&&(e=y(i.toDataURL(t,r))),e}();!function(t){a.getImageType(function(e,n){e?t(e):n?i.toDataURL(n,function(e,n){e?t(e):t(null,y(n))}):t()})}(t)},this.getImageType=function(t){if(!t)return o&&n||(o=m()),o;o&&n?t(null,o):m(function(e,n){e?t(e):(o=n,t(null,o))})}};
//# sourceMappingURL=canvas-to-buffer.modern.mjs.map
